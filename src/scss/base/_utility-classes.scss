.type-heading     { font-family: $font-heading     !important; }
.type-etc-regular { font-family: $font-etc-regular !important; }
.type-etc-medium  { font-family: $font-etc-medium  !important; }
.type-etc-bold    { font-family: $font-etc-bold    !important; }
.type-etc-wide    { font-family: $font-etc-wide    !important; }

.text-black            { color: $colour-black; }
.text-deep-blue        { color: $colour-deep-blue; }
.text-interactive-blue { color: $colour-interactive-blue; }
.text-muted-blue       { color: $colour-muted-blue; }
.text-grey             { color: $colour-grey; }
.text-mint             { color: $colour-mint; }
.text-pink             { color: $colour-pink; }
.text-smoke            { color: $colour-smoke; }
.text-white            { color: $colour-white; }

// Borders
.brd-all {
  border-style: solid;
  border-width: 1px;
  border-color: inherit;
}

// Border directions
.brd-top {
  border-top-style: solid;
  border-width: 1px;
}
.brd-bottom {
  border-bottom-style: solid;
  border-width: 1px;
}
.round {
  border: solid 2px $colour-yellow;
  border-radius: 50%;
}

// Text adjustment
.text-left      { text-align: left; }
.text-center    { text-align: center; }
.text-right     { text-align: right; }
.text-uppercase { text-transform: uppercase; }
.text-reset     { text-transform: unset !important; }
.text-nowrap    { white-space: nowrap; }
.text-forcewrap { overflow-wrap: break-word; }

// Padding within elements
.pad-vert-tiny {
  padding-bottom: $gutter-tiny;
  padding-top:    $gutter-tiny;
}

.pad-vert-base {
  padding-bottom: $gutter-base;
  padding-top:    $gutter-base;
}

.pad-vert-large {
  padding-bottom: $gutter-large;
  padding-top:    $gutter-large;
}

.pad-vert-xlarge {
  padding-bottom: $gutter-xlarge;
  padding-top:    $gutter-xlarge;
}

.pad-b-xlarge {
  padding-bottom: $gutter-xlarge;
}

.pad-t-xlarge {
  padding-top:    $gutter-xlarge;
}

.pad-t-base {
  padding-top:    $gutter-base;
}

.pad-horz-large {
  padding-left:  $gutter-large;
  padding-right: $gutter-large;
}

@include media-breakpoint-down(sm) {
  .pad-vert-large, .pad-vert-xlarge {
    padding-bottom: $gutter-base;
    padding-top:    $gutter-base;
  }

  .pad-b-xlarge {
    padding-bottom: $gutter-base;
  }

  .pad-t-xlarge {
    padding-top:    $gutter-base;
  }

  .pad-horz-large {
    padding-left:  $gutter-base;
    padding-right: $gutter-base;
  }
}

// Margins after elements
.gutter-xxlarge { margin-bottom: $gutter-xxlarge; }
.gutter-xlarge  { margin-bottom: $gutter-xlarge; }
.gutter-large   { margin-bottom: $gutter-large; }
.gutter-medium  { margin-bottom: $gutter-medium; }
.gutter-base    { margin-bottom: $gutter-base; }

.flush { margin-bottom: 0 !important; }
.suck {  margin: 0 !important; }

@include media-breakpoint-down(sm) {
  .gutter-xxlarge, .gutter-xlarge, .gutter-large, .gutter-medium { margin-bottom: $gutter-base; }
}
.overflow-hidden { overflow: hidden; }
.img-fluid { max-width: 100%; }
.w-100 { width: 100% !important; }
// Sometimes you need to punch an element to the front
.punch {
  position: relative;
  z-index: 1;
}
// ... and sometimes you just need to ensure all elements have a relative point.
.pos-rel { position: relative; }
@include media-breakpoint-up(md) {
  .img-fit-md {
    height: 100%;
    left: 0;
    object-fit: cover;
    position: absolute;
    top: 0;
    width: 100%;
  }
}
.sr-only, .js.js [data-js="hidden"] {
  appearance: none;
  border: 0;
  clip: rect(0,0,0,0);
  height: 1px;
  margin: -1px;
  min-width: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;

}

// Used in conjunction with the above class to allow
// *some* elements to display, when they fall into focus
.kb-focus.kb-focus:focus {
  border: unset;
  height: auto;
  margin: unset;
  min-width: unset;
  overflow: visible;
  padding: unset;
  position: static;
  width: auto;
}

// To hide stuff from the accessibility DOM too
.hidden { display: none; }

// Say you have a CTA inside a Bootstrap column and you need it to have a vertical flexbox
// layout, so you can push the button to the bottom (using a .mt-auto class, for example)
// Works on elements which already have the whole height of the row, naturally.
.flex-vert {
  display: flex;
  flex-direction: column;
  // Risky...
  height: 100%;

  // The height property above causes issues when .flex-vert was added directly onto a Bootstrap
  // column.
  &[class^='col'],
  &[class*=' col'],
  &.block-scroll__child {
    height: auto;
  }
}

.nav-text { text-decoration: none; }