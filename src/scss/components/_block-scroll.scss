// Generic block scrolling thing

.block-scroll {
  align-items: stretch;
  display: flex;
  justify-content: space-between;
  // Required, for the touch behaviour
  overflow-y: scroll;
  -webkit-overflow-scrolling: touch;
  // Required, so we can measure the scroll amount
  position: relative;
  scroll-behavior: smooth;
  
  // This would be safer hidden behind the data-active
  // attribute but Webkit didn't like that combination
  // of selectors, unfortunately.
  &::-webkit-scrollbar { width: 0; }

  // JavaScript has found the markup, and thinks it's good.
  &[data-active="true"] {
    // Hides the scrollbars, but they still work
    -ms-overflow-style: none;
    scrollbar-width: none;   
  }  
}

// This expands the block scroll on breakpoints smaller than md.
@include media-breakpoint-down(sm) {
  .block-scroll-md { display: block; }
}

// The (<-) and (->) buttons, which JavaScript shows and hides, as required
.scroll-control {
  // I kind of need this paragraph to go away, but not to hide.
  display: inline;

  & > button {
    position: absolute;
    top: 50%;
    transform: translate(0,-50%);
    z-index: 1;
  }

  & > :first-child { left:  0; }
  & > :last-child  { right: 0; }
}

.block-scroll__child,
.block-scroll__child-wide {
  flex-grow: 0;
  flex-shrink: 0;
}

.block-scroll__child {
  // This width is based on the reviews scroller
  flex-basis: 370px;
  height: auto;
}

@include media-breakpoint-down(sm) {
  // Because I'd like the scroller to sit within .container. I need
  // to break the default behaviour of .row
  .row.block-scroll-xs {
    margin-left: 0;
    margin-right: 0;

    .block-scroll__child_xs {
      margin-right: $gutter-base;
      padding-left: 0;
      padding-right: 0;
    }

    .block-scroll__child_xs:last-child {
      margin-right: 0;
    }
  }
  
  .block-scroll__child,
  .block-scroll__child_xs {
    flex-basis: 80%;
  }

  // This takes a normal Bootstrap row and turns it into a scroller,
  // but only on mobile
  .block-scroll-xs {
    flex-wrap: nowrap;
  }

  .block-scroll__child_xs {
    flex-grow: 0;
    flex-shrink: 0;
  }
}

// This is as wide as the parent scroller, so only one child
// is seen through the scroll port at any one time.
.block-scroll__child-wide {
  width: 100%;
}

// Fixing the bottom gutter
.block-scroll__footer > * {
  margin-bottom: 0;
}

@media print {
  .block-scroll, .block-scroll-xs {
    display: block;
    flex-wrap: wrap;
  }
  .block-scroll__child,
  .block-scroll__child-wide,
  .block-scroll__child_xs {
    flex-basis: 100%;
    margin: 0 0 1em;
  }

  .scroll-control {
    display: none;
  }
}